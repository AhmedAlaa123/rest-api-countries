{"version":3,"sources":["types/types.js","components/header/header.jsx","actions/action-creator.js","components/home-component/home.jsx","components/details-component/map-component.jsx","components/details-component/details.jsx","components/page-not-found/PageNotFound.jsx","App.js","reportWebVitals.js","reducers/change-mode-reducer.js","reducers/select-country-reducer.js","reducers/save-countries-reducer.js","store/store.js","index.js"],"names":["ADD_COUNTRY","SAVE_COUNTRIES","CHANGE_MODE","Header","darkMode","this","props","setColors","className","onClick","changeMode","document","documentElement","style","setProperty","React","Component","connect","state","modeReducer","dispatch","type","HomePage","country","showMenu","countries","loading","handelToggelMenuClick","e","setState","handelSearch","preventDefault","handelTextChange","text","target","value","countriesList","savedCountries","filter","name","toLowerCase","startsWith","toLocaleLowerCase","getData","url","a","axios","get","then","response","status","data","catch","er","goToDetailsPage","AddCountry","history","replace","handelFilterUsingRegion","event","continentName","textContent","region","saveCountries","onSubmit","id","onChange","placeholder","htmlFor","backgroundColor","color","displayCountries","map","title","src","flag","alt","population","capital","saveCountiresReducer","addCountryAction","saveCountriesAction","Map","setMap","mymap","L","setView","latlng","tileLayer","attribution","maxZoom","tileSize","zoomOffset","accessToken","addTo","marker","bindPopup","openPopup","DetailsPage","countryBorders","border","fromMenu","handelBack","setData","selectedCountry","getCountryFromBackEnd","match","params","loadBordersCountryFromProps","displayData","push","Set","nativeName","subregion","topLevelDomain","currencies","currency","languages","language","x","Math","random","countires","length","countryName","loadBordersCountry","borders","y","alpha3Code","forEach","element","getBorderCountries","countryCode","countryReducer","PageNotFound","App","exact","path","render","component","from","to","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","localStorage","getItem","intialState","changeModeReducer","action","setItem","selectCountryReducer","intialstate","AppReducers","combineReducers","store","createStore","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.eed848bf.chunk.js","sourcesContent":["const ADD_COUNTRY='ADD_COUNTRY'\r\nconst SAVE_COUNTRIES='SAVE_COUNTRIES'\r\nconst CHANGE_MODE='CHANGE_MODE'\r\nexport {ADD_COUNTRY,SAVE_COUNTRIES,CHANGE_MODE}","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport './header.css'\r\nimport { changeMoodAction } from '../../actions/action-creator';\r\n\r\nclass Header extends React.Component {\r\n\r\n   \r\n    \r\n   render(){\r\n        const {darkMode}=this.props\r\n        this.setColors(darkMode)\r\n    \r\n        return(\r\n            <header className='header'>\r\n                <div className=\"container\">\r\n                <div className=\"row justify-content-between\">\r\n                    <div className=\"brand\">Where in the World?</div>\r\n                    <div className='mode' onClick={this.props.changeMode}><i className={`fa fa-${darkMode?'sun':'moon'}`}></i> {darkMode?'Light':'Dark'} Mode</div>\r\n                </div>\r\n                </div>\r\n            </header>\r\n        )\r\n    }\r\n   \r\n    setColors(darkMode){\r\n\r\n        document.documentElement.style.setProperty('--backColor--',`${darkMode?'hsl(207, 26%, 17%)':'hsl(0, 0%, 98%)'}`)\r\n        document.documentElement.style.setProperty('--textColor--',`${darkMode?'hsl(0, 0%, 100%)':'hsl(200, 15%, 8%)'}`)\r\n        document.documentElement.style.setProperty('--elementsBackColor--',`${darkMode?'hsl(209, 23%, 22%)':'hsl(0, 0%, 100%)'}`)\r\n        document.documentElement.style.setProperty('--inputTextColor--',`${darkMode?'hsl(0, 0%, 100%)':'hsl(0, 0%, 52%)'}`)\r\n    }\r\n}\r\n\r\nconst mapStateToProps=state=>{\r\n    return {\r\n        darkMode:state.modeReducer.darkMode\r\n    }\r\n}\r\nconst mapDispatchToProps=dispatch=>{\r\n    return{\r\n        changeMode:()=>dispatch(changeMoodAction())\r\n    }\r\n}\r\nexport default connect(mapStateToProps,mapDispatchToProps)(Header);","import { ADD_COUNTRY,SAVE_COUNTRIES,CHANGE_MODE } from \"../types/types\";\r\n\r\nconst addCountryAction=country=>{\r\n    return {type:ADD_COUNTRY,country}\r\n}\r\nconst saveCountriesAction=countries=>{\r\n    return {type:SAVE_COUNTRIES,countries}\r\n}\r\nconst changeMoodAction=()=>{\r\n    return {\r\n        type:CHANGE_MODE\r\n    }\r\n}\r\n\r\nexport {addCountryAction,saveCountriesAction,changeMoodAction}","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport axios from 'axios';\r\nimport { addCountryAction, saveCountriesAction } from '../../actions/action-creator';\r\nimport './home.css'\r\nclass HomePage extends Component {\r\n    state = { \r\n        country:'',\r\n        showMenu:false,\r\n        countries:[],\r\n        loading:true,\r\n     }\r\n     handelToggelMenuClick=e=>{\r\n        this.setState({showMenu:!this.state.showMenu})\r\n      }\r\n     handelSearch=e=>{\r\n        //preventing reloding the page \r\n        e.preventDefault();\r\n     }\r\n     handelTextChange=e=>{\r\n         \r\n        const text=e.target.value;\r\n        if(text==='')\r\n        {\r\n            this.setState({countries:this.props.savedCountries})\r\n            return\r\n        }\r\n        // filtering countries that start with the input\r\n        const countriesList=this.props.savedCountries.filter(country=>country.name.toLowerCase().startsWith(text.toLocaleLowerCase()));\r\n        // setting the state countriesList\r\n        this.setState({countries:countriesList})\r\n     }\r\n\r\n     // start component life cycle\r\n async componentDidMount(){\r\n      \r\n     await this.getData('https://restcountries.eu/rest/v2/all')\r\n     this.props.saveCountries(this.state.countries) //saving Data in redux store\r\n    \r\n    }\r\n\r\n    // this method used to get countries from passed url\r\n    getData= async url=>{\r\n        await  axios.get(url).then(response=>{\r\n            // check of response status ===200 is mean data is found !\r\n            if(response.status===200)\r\n            {\r\n                \r\n                 // setting the state with returned countries\r\n                 this.setState({countries:response.data,loading:false})\r\n            }\r\n        }).catch(er=>{ // catching the error\r\n            this.setState({loading:false})\r\n        })\r\n    }\r\n    // this method used to handel card click and go to details page\r\n    goToDetailsPage=(country)=>{\r\n        this.props.AddCountry(country); // add country to the store redux\r\n        this.props.data.history.replace(`/countries-rest/${country.name}`) \r\n    }\r\n    // this method used to filter countries using region or continent\r\n    handelFilterUsingRegion=event=>{\r\n        \r\n        const continentName=event.target.textContent\r\n        // construct savedcountries prop\r\n        const {savedCountries}=this.props\r\n        if(continentName.toLocaleLowerCase()==='all')\r\n        {\r\n            this.setState({countries:savedCountries})\r\n            return\r\n        }\r\n        // filtering countries\r\n        const countriesList=savedCountries.filter(country=>country.region.toLowerCase()===continentName.toLocaleLowerCase())\r\n        this.setState({countries:countriesList})\r\n        \r\n    }\r\n    render() { \r\n       \r\n        // counstruct darkMode prop\r\n        const {darkMode}=this.props\r\n        return ( \r\n            <main >\r\n            <div className='container'>\r\n                {\r\n                    this.state.loading?<div className='overlay-loading'>\r\n                        <div className='buble-container'><span key='4' className='buble'></span> <span key='1' className='buble'></span> <span key='2' className='buble'></span> <span key='3' className='buble'></span></div>\r\n                        </div>:''\r\n                }\r\n                <div className=\"row justify-content-between\">\r\n                    <form onSubmit={this.handelSearch} className='mb-4'>\r\n                        <input className='form-control' id='country' onChange={this.handelTextChange} type='text' placeholder='Search for Country ...'  />\r\n                        <label htmlFor=\"country\" ><i className='fa fa-search'></i></label>\r\n                    </form>\r\n                    <div className=\"dropdown ml-auto\" >\r\n                        <button onClick={this.handelToggelMenuClick} className=\"btn  dropdown-toggle border-0\" type=\"button\" id=\"dropdownMenu2\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\" style={{backgroundColor:`${darkMode?'hsl(209, 23%, 22%)':'hsl(0, 0%, 100%)'}`,color:`${darkMode?'hsl(0, 0%, 100%)':'hsl(200, 15%, 8%)'}`}}>\r\n                            Filter By Region\r\n                        </button>\r\n                        <ul className={`dropdown-menu  ${this.state.showMenu?'active':''}`} aria-labelledby=\"dropdownMenu2\"  >\r\n                            <li className=\"dropdown-item\" onClick={this.handelFilterUsingRegion} >All</li>\r\n                            <li className=\"dropdown-item\" onClick={this.handelFilterUsingRegion} >Africa</li>\r\n                            <li className=\"dropdown-item\" onClick={this.handelFilterUsingRegion} >Americas</li>\r\n                            <li className=\"dropdown-item\" onClick={this.handelFilterUsingRegion} >Asia</li>\r\n                            <li className=\"dropdown-item\" onClick={this.handelFilterUsingRegion} >Europe</li>\r\n                            <li className=\"dropdown-item\" onClick={this.handelFilterUsingRegion} >Oceania</li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n                {/* Display Countries*/}\r\n                {\r\n                    this.displayCountries()\r\n                }\r\n            </div>\r\n        </main> );\r\n    }\r\n    displayCountries(){\r\n        const {countries}=this.state;\r\n        \r\n        return(\r\n            <div className=\"row justify-content-between mt-5\">\r\n                    {\r\n                        countries.map(country=>{\r\n                            return(\r\n                                <div key={country.name} className='col-md-4 country-data col-lg-3 mb-4 ' title='Click to Show Details' onClick={()=>this.goToDetailsPage(country)}>\r\n                                    <img className=\"card-img-top img-fluid\" src={country.flag}alt={country.name?country.name:''}/>\r\n                                    <div className=\"card-body\">\r\n                                        <h5 className=\"card-title\">{country.name?country.name:'Un Titled'}</h5>\r\n                                        <ul className=\"list-unstyled\">\r\n                                            <li className=\" p-0 mb-1 my-text-14px\" ><b>Population : </b> {country.population?country.population:'Un known'}</li>\r\n                                            <li className=\"p-0 mb-1 my-text-14px\" ><b>Region : </b> {country.region?country.region:'un known'}</li>\r\n                                            <li className=\"p-0 mb-1 my-text-14px\" ><b>Capital : </b> {country.capital?country.capital:'un known'}</li>\r\n                                        </ul>\r\n                                        \r\n                                    </div>\r\n                                </div>\r\n                            );\r\n                        })\r\n                    }\r\n                </div>\r\n        );\r\n    }\r\n}\r\nconst mapStateToProps=state=>{\r\n    return {\r\n        savedCountries:state.saveCountiresReducer,\r\n        darkMode:state.modeReducer.darkMode\r\n    }\r\n}\r\nconst mapDispatchToProps=dispatch=>{\r\n    return {\r\n        AddCountry:country=>dispatch(addCountryAction(country)),\r\n        saveCountries:countries=>dispatch(saveCountriesAction(countries))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(HomePage);","import React from 'react';\r\n// import {}from 'react-leaflet'\r\nimport L from 'leaflet'\r\nclass Map extends React.Component {\r\n    state = {  }\r\ncomponentDidMount()\r\n{\r\n    // console.log(this.props.latlng.latlng[0] ,'Map')\r\n    this.setMap()\r\n}\r\n    render() { \r\n        return (<div id='mapId' ></div>  );\r\n    }\r\n    // this method used to display country location on the map\r\n    setMap(){\r\n        const {country}=this.props\r\n    let mymap = L.map('mapId').setView([country.latlng[0], country.latlng[1]], 6);\r\n    \r\n    L.tileLayer('https://api.mapbox.com/styles/v1/{id}/tiles/{z}/{x}/{y}?access_token={accessToken}', {\r\n        attribution: 'Map data &copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors, Imagery © <a href=\"https://www.mapbox.com/\">Mapbox</a>',\r\n        maxZoom: 18,\r\n        //map version\r\n        id: 'mapbox/streets-v11',\r\n        tileSize: 512,\r\n        zoomOffset: -1,\r\n        // access token is my map box access control\r\n        accessToken: 'pk.eyJ1IjoiYWhtZWQtYWxhYTE5OTgiLCJhIjoiY2tycWNsdXIxMDc3ajJ1cWM3YWN1ZjM4eSJ9.uDdek3vpqo9HHg68fejHqA'\r\n    }).addTo(mymap);\r\n    let marker = L.marker([country.latlng[0], country.latlng[1] ],).addTo(mymap)\r\n    marker.bindPopup(country.name).openPopup();\r\n    }\r\n}\r\n \r\nexport default Map;\r\n","import axios from 'axios';\r\nimport React from 'react';\r\nimport { connect } from 'react-redux';\r\n// import Map from './map-component';\r\nimport Map from './map-component';\r\nimport './details.css'\r\n\r\nclass DetailsPage extends React.Component{\r\n    countryBorders=[]\r\n    state= {\r\n        country:null,\r\n        border:null,\r\n        loading:true,\r\n        fromMenu:false,\r\n      \r\n    }\r\n    async componentDidMount(){\r\n        \r\n        await this.setData()\r\n        \r\n        if(this.props.countires.length>0)\r\n        {\r\n            this.setState({fromMenu:true})\r\n        }\r\n        \r\n        \r\n    }\r\n    handelBack=e=>{\r\n     // go back to home page\r\n        this.props.data.history.replace('/countries-rest/')\r\n      \r\n    }\r\n   \r\n    render ()\r\n    {\r\n       \r\n        const {darkMode} =this.props\r\n        return (\r\n            <main className='pt-5' >\r\n                <div className=\"container\">\r\n                    <button onClick={this.handelBack} className='btn btn-back' style={{backgroundColor:`${darkMode?'hsl(209, 23%, 22%)':'hsl(0, 0%, 100%)'}`,color:`${darkMode?'hsl(0, 0%, 100%)':'hsl(200, 15%, 8%)'}`}}><i className='fa fa-arrow-left'></i> back</button>\r\n                    {\r\n                        this.displayData()\r\n                    }\r\n\r\n                    {\r\n                        this.state.loading?<div className='overlay-loading'>\r\n                            <div className='buble-container'><span key='4' className='buble'></span> <span key='1' className='buble'></span> <span key='2' className='buble'></span> <span key='3' className='buble'></span></div>\r\n                        </div>:''\r\n                    }\r\n\r\n                    {this.state.country?<Map country={this.state.country}/>:''}\r\n                </div>\r\n            </main>\r\n        )\r\n\r\n\r\n    }\r\n\r\n     setData= async()=>\r\n    {\r\n        const {selectedCountry}=this.props;\r\n      \r\n        if(selectedCountry.country==='')\r\n        {\r\n            this.setState({loading:true})\r\n            await this.getCountryFromBackEnd(this.props.data.match.params.country) // waiting for getting data from server\r\n        \r\n        }\r\n        else{\r\n            await this.setState({country:selectedCountry,loading:false}) // waiting to setting the state because this take time\r\n            this.loadBordersCountryFromProps()\r\n            \r\n        }\r\n        \r\n    }\r\n      async getCountryFromBackEnd(countryName)\r\n    {\r\n       \r\n        try{\r\n                await axios.get(`https://restcountries.eu/rest/v2/name/${countryName}?fullText=true`).then( response=>{\r\n                    if(response.status===200) // country is found response status Ok\r\n                    {\r\n                      \r\n                        this.countryBorders=[] // Empty CountryBorders Array\r\n                        this.setState({country:response.data[0],loading:false,border:null,fromMenu:false})\r\n                        //Loading border countries for current Country\r\n                        this.loadBordersCountry(response.data[0].borders)\r\n                        \r\n                        \r\n                    }\r\n                   \r\n                }   \r\n            ).catch(e=>{\r\n\r\n                // Remove Loading Page\r\n                this.setState({loading:false})\r\n            }) \r\n        }catch(ex){\r\n        }\r\n     \r\n \r\n    }\r\n    loadBordersCountryFromProps(){\r\n        // Filterring countries that is border for current country\r\n        let countries=[]\r\n        for(let x=0;x<this.props.countires.length;x++)\r\n        {\r\n            for(let y=0;y<this.state.country.borders.length;y++)\r\n            {\r\n                if(this.props.countires[x].alpha3Code===this.state.country.borders[y])\r\n                {\r\n                    countries.push(this.props.countires[x])\r\n                }\r\n            }\r\n        }\r\n        \r\n        this.setState({border:countries})\r\n    }\r\n  \r\n    // loading borders from bacend whene the user refresh the page bacause redux store will be empty!\r\n     loadBordersCountry()\r\n    {\r\n        \r\n        // looping on country borders alph3code to get its data from backend or from server\r\n     this.state.country.borders.forEach(element=> {\r\n         // getting country with current alpha3Code\r\n          this.getBorderCountries(element)\r\n         \r\n        });\r\n      \r\n    }\r\n    // this methos will get boredr country with passed country alpha3code asynchrouns \r\n    async getBorderCountries(countryCode='')\r\n    {\r\n        await  axios.get(`https://restcountries.eu/rest/v2/alpha/${countryCode}`).then(response=>{\r\n                \r\n                this.setState({border:response.data})\r\n               \r\n                \r\n        })\r\n    }\r\n    // this method used to display country data\r\n    displayData=()=>{\r\n        const {country}=this.state;\r\n    //    setTimeout(() => {\r\n            \r\n    //     }, 3000);\r\n        if(!this.state.country){\r\n           \r\n            return <p id='error-message' className='text-center text-danger  font-weight-bold ' >Un Known Country Please Go To Menu and Select The Country</p>\r\n        }\r\n        if(this.state.border&&!this.state.fromMenu)\r\n        {\r\n             this.countryBorders.push(this.state.border)\r\n             this.countryBorders=[...(new Set(this.countryBorders))]\r\n        }\r\n        else{\r\n            this.countryBorders=this.state.border?this.state.border:[]\r\n        }\r\n        const {darkMode}=this.props\r\n        return (\r\n            <div className='row justify-content-between mt-4'>\r\n                    <div className=\"col-md-6\">\r\n                        <img  className='img-fluid' src={country.flag} alt=\"\" />\r\n                    </div>\r\n                    <div className=\"col-md-6 country-detail\">\r\n                        <h3>{country.name}</h3>\r\n                        <div className=\"row justify-content-between\">\r\n                        <div className=\"col-md-6 mb-5 my-text-16px\">\r\n                                <div><b>Native Name : </b>{country.nativeName}</div>\r\n                                <div><b>Population</b> : {country.population}</div>\r\n                                <div><b>Region : </b>{country.region}</div>\r\n                                <div><b>Sub Regions : </b>{country.subregion}</div>\r\n                                <div><b>Capital : </b>{country.capital}</div>\r\n                        </div>\r\n                        \r\n                        <div className=\"col-md-6 my-text-16px\">\r\n                            <div><b>Top Level Domain : </b>{country.topLevelDomain}</div>\r\n                            <div><b>Currencies : </b>{country.currencies.map(currency=><span key={currency.name} className='mr-4'>{currency.name}</span>)}</div>\r\n                            <div><b>Languages : </b>{country.languages.map(language=><span key={language.name} className='mr-4'>{language.name}</span>)}</div>\r\n                        </div>\r\n                        </div>\r\n                        <div className='mb-5 row my-text-16px col' ><b>Border Countries : </b>{this.countryBorders.map(x=>x?<span key={Math.random()} className='border-country btn-back mb-3' style={{backgroundColor:`${darkMode?'hsl(209, 23%, 22%)':'hsl(0, 0%, 100%)'}`,color:`${darkMode?'hsl(0, 0%, 100%)':'hsl(200, 15%, 8%)'}`}}>{x.name}</span>:'')}</div>\r\n                    </div>\r\n                </div>\r\n        )\r\n    }\r\n    \r\n}\r\nconst mapStateToProps=state=>{\r\n    return {\r\n        selectedCountry:state.countryReducer,\r\n        countires:state.saveCountiresReducer,\r\n        darkMode:state.modeReducer.darkMode\r\n    }\r\n}\r\nexport default connect(mapStateToProps)(DetailsPage)","import React from 'react';\r\n\r\nconst PageNotFound = () => {\r\n    return ( <div>Page Not Found</div> );\r\n}\r\n \r\nexport default PageNotFound;","import React from 'react'\nimport { Route,BrowserRouter,Redirect,Switch } from 'react-router-dom';\nimport './app.css'\nimport Header from './components/header/header'\nimport HomePage from './components/home-component/home';\nimport DetailsPage from './components/details-component/details';\nimport PageNotFound from './components/page-not-found/PageNotFound';\n;\n\nclass  App extends React.Component {\n  state= {\n    showMenu:false\n  }\n\n  render()\n  {\n    return (\n       <BrowserRouter>\n          <Header/>\n          <Switch>\n            <Route exact path='/countries-rest/' render ={props=><HomePage data={props}/>}/>\n            <Route exact path='/countries-rest/page-not-found' component={PageNotFound}/>\n            <Route path='/countries-rest/:country' render ={props=><DetailsPage data={props}/>}/>\n            <Redirect exact from='/' to ='/countries-rest/' />\n            <Redirect to='/countries-rest/page-not-found/'/>\n          </Switch>\n       </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","\r\n/*\r\n ================== This Reducer used to change mode to dark mode or light mode ==============\r\n*/\r\n\r\nimport { CHANGE_MODE } from \"../types/types\";\r\nvar darkMode=localStorage.getItem('darkMode') // getting darkmode value from localstorge\r\nif(darkMode) // check if darkmode is in localstorage\r\n{\r\n    // append to darkmode true if darkMode in localstorage is true as string false if darkMode in localstorage is false as string\r\n    darkMode=darkMode==='true'?true:false\r\n}\r\nelse{\r\n    darkMode=false // apend defaulte value as false  if darkMode not in loaclstorage \r\n}\r\nconst intialState={\r\n    darkMode\r\n}\r\nfunction changeModeReducer(state=intialState,action)\r\n{\r\n    const {darkMode}=state; // construct darkMode from state\r\n    if(action.type===CHANGE_MODE)\r\n    {\r\n        localStorage.setItem('darkMode',!darkMode) // store darkMode in localStorage\r\n        return {\r\n            darkMode:!darkMode\r\n        }\r\n    }\r\n    return state\r\n}\r\nexport default changeModeReducer;","import { ADD_COUNTRY } from \"../types/types\";\r\n\r\nconst intialState={\r\n    country:''\r\n}\r\nfunction selectCountryReducer(state=intialState,action){\r\n    if(action.type===ADD_COUNTRY)\r\n    return action.country\r\n    return state;\r\n}\r\nexport default selectCountryReducer;","\r\nimport { SAVE_COUNTRIES } from \"../types/types\"\r\n\r\nconst intialstate={\r\n    countries:[]\r\n}\r\nconst saveCountiresReducer=(state=intialstate,action)=>{\r\n    if(action.type===SAVE_COUNTRIES)\r\n    {\r\n        // console.log(state,'reducer')\r\n        return action.countries\r\n    }\r\n    else return state\r\n}\r\nexport default saveCountiresReducer","import { createStore,combineReducers } from \"redux\"\r\nimport changeModeReducer from './../reducers/change-mode-reducer';\r\nimport selectCountryReducer from './../reducers/select-country-reducer';\r\nimport saveCountiresReducer from './../reducers/save-countries-reducer';\r\n\r\n// const intialState={\r\n//     darkMode:false,\r\n//     selectedCountry:'',\r\n//     countries:[]\r\n// }\r\n\r\nconst AppReducers=combineReducers({modeReducer:changeModeReducer,\r\n    countryReducer:selectCountryReducer,saveCountiresReducer:saveCountiresReducer});\r\nconst store=createStore(AppReducers)\r\nexport default store;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css'\nimport {Provider} from 'react-redux'\nimport store from './store/store';\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}